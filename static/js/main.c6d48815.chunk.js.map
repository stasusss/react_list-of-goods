{"version":3,"sources":["components/GoodsItem/GoodsItem.js","components/Option/Option.js","components/GoodsList/GoodsList.js","App.js","index.js"],"names":["GoodsItem","props","goodsItem","Options","reverse","sortByAlphabet","reset","sortByLength","select","value","filterByLength","type","onClick","onChange","map","item","key","GoodsList","state","goods","minLength","setState","prevState","sort","a","b","localeCompare","length","event","target","filter","this","currentGoodsItem","React","Component","goodsFromServer","App","isStarted","start","className","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAY,SAACC,GAAW,IAC3BC,EAAcD,EAAdC,UAER,OACE,2BACGA,ICLMC,EAAU,SAACF,GAAW,IACzBG,EAMaH,EANbG,QACNC,EAKmBJ,EALnBI,eACAC,EAImBL,EAJnBK,MACAC,EAGmBN,EAHnBM,aACAC,EAEmBP,EAFnBO,OACAC,EACmBR,EADnBQ,MACAC,EAAmBT,EAAnBS,eAEF,OACE,6BACE,4BAAQC,KAAK,SAASC,QAASR,GAA/B,WACA,4BAAQO,KAAK,SAASC,QAASP,GAA/B,iBACA,4BAAQM,KAAK,SAASC,QAASN,GAA/B,SACA,4BAAQK,KAAK,SAASC,QAASL,GAA/B,kBACA,4BAAQM,SAAUH,EAAgBD,MAAOA,GAErCD,EAAOM,KAAI,SAAAC,GAAI,OACb,4BAAQC,IAAKD,EAAMN,MAAOM,GAAOA,SChBvCP,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE9BS,EAAb,4MACEC,MAAQ,CACNC,MAAO,EAAKlB,MAAMkB,MAClBC,UAAW,GAHf,EAMEf,eAAiB,WACf,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC1BH,MAAO,YAAIG,EAAUH,OAAOI,MAAK,SAACC,EAAGC,GAAJ,OAC/BD,EAAEE,cAAcD,WATxB,EAcElB,aAAe,WACb,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1BH,MAAO,YAAIG,EAAUH,OAAOI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,eAhB9D,EAoBEjB,eAAiB,SAACkB,GAChB,EAAKP,SAAS,CACZD,UAAWQ,EAAMC,OAAOpB,MACxBU,MAAO,YAAI,EAAKlB,MAAMkB,OACnBW,QAAO,SAAAf,GAAI,OAAIA,EAAKY,QAAUC,EAAMC,OAAOpB,YAxBpD,EA4BEL,QAAU,WACR,EAAKiB,UAAS,SAAAC,GAAS,MAAK,CAC1BH,MAAO,YAAIG,EAAUH,OAAOf,eA9BlC,EAkCEE,MAAQ,WACN,EAAKe,SAAS,CACZF,MAAO,EAAKlB,MAAMkB,MAClBC,UAAW,KArCjB,uDAyCY,IAAD,EACsBW,KAAKb,MAA1BC,EADD,EACCA,MAAOC,EADR,EACQA,UAEf,OACE,oCACE,4BAEID,EAAML,KAAI,SAAAkB,GAAgB,OACxB,wBAAIhB,IAAKgB,GACP,kBAAC,EAAD,CAAW9B,UAAW8B,SAK9B,kBAAC,EAAD,CACE3B,eAAgB0B,KAAK1B,eACrBE,aAAcwB,KAAKxB,aACnBG,eAAgBqB,KAAKrB,eACrBN,QAAS2B,KAAK3B,QACdE,MAAOyB,KAAKzB,MACZE,OAAQA,EACRC,MAAOW,SA9DjB,GAA+Ba,IAAMC,WCH/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqCaC,E,4MAjCblB,MAAQ,CACNmB,WAAW,G,EAGbC,MAAQ,WACN,EAAKjB,UAAS,SAAAC,GAAS,MAAK,CAC1Be,WAAYf,EAAUe,e,uDAIhB,IACAA,EAAcN,KAAKb,MAAnBmB,UAER,OACE,yBAAKE,UAAU,OACb,sCAAQJ,EAAgBR,OAAxB,WAEGU,EASI,kBAAC,EAAD,CAAWlB,MAAOgB,IAPnB,4BACExB,KAAK,SACLC,QAASmB,KAAKO,OAFhB,c,GApBIL,IAAMC,WCbxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c6d48815.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsItem = (props) => {\n  const { goodsItem } = props;\n\n  return (\n    <p>\n      {goodsItem}\n    </p>\n  );\n};\n\nGoodsItem.propTypes = {\n  goodsItem: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Options = (props) => {\n  const { reverse,\n    sortByAlphabet,\n    reset,\n    sortByLength,\n    select,\n    value,\n    filterByLength } = props;\n\n  return (\n    <div>\n      <button type=\"button\" onClick={reverse}>Reverse</button>\n      <button type=\"button\" onClick={sortByAlphabet}>Sort By Names</button>\n      <button type=\"button\" onClick={reset}>Reset</button>\n      <button type=\"button\" onClick={sortByLength}>Sort By Length</button>\n      <select onChange={filterByLength} value={value}>\n        {\n          select.map(item => (\n            <option key={item} value={item}>{item}</option>\n          ))\n        }\n      </select>\n    </div>\n  );\n};\n\nOptions.propTypes = {\n  sortByAlphabet: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  filterByLength: PropTypes.func.isRequired,\n  reverse: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  select: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodsItem } from '../GoodsItem/GoodsItem';\nimport { Options } from '../Option/Option';\n\nconst select = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport class GoodsList extends React.Component {\n  state = {\n    goods: this.props.goods,\n    minLength: 1,\n  }\n\n  sortByAlphabet = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => (\n        a.localeCompare(b)\n      )),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  filterByLength = (event) => {\n    this.setState({\n      minLength: event.target.value,\n      goods: [...this.props.goods]\n        .filter(item => item.length >= event.target.value),\n    });\n  }\n\n  reverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      goods: this.props.goods,\n      minLength: 1,\n    });\n  }\n\n  render() {\n    const { goods, minLength } = this.state;\n\n    return (\n      <>\n        <ul>\n          {\n            goods.map(currentGoodsItem => (\n              <li key={currentGoodsItem}>\n                <GoodsItem goodsItem={currentGoodsItem} />\n              </li>\n            ))\n          }\n        </ul>\n        <Options\n          sortByAlphabet={this.sortByAlphabet}\n          sortByLength={this.sortByLength}\n          filterByLength={this.filterByLength}\n          reverse={this.reverse}\n          reset={this.reset}\n          select={select}\n          value={minLength}\n        />\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStarted: false,\n  }\n\n  start = () => {\n    this.setState(prevState => ({\n      isStarted: !prevState.isStarted,\n    }));\n  }\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`${goodsFromServer.length} Goods`}</h1>\n        {\n          !isStarted\n            ? (\n              <button\n                type=\"button\"\n                onClick={this.start}\n              >\n                Start\n              </button>\n            )\n            : (<GoodsList goods={goodsFromServer} />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}